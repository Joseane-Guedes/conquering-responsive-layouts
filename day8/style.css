*, *::before, *::after {
  box-sizing:border-box;
}

body {
  margin: 0;
  font-family: "Roboto", sans-serif;
}

h1 {
  font-size: 3rem;
}

.container { 
  width: 80%;
  max-width: 1100px;
  margin: 0 auto;
}

/* the main thing I wanted to look at this class is what happens when you create, when you do a diplay flex, so the columns are going to try and shrink down to their minimum possible size. That's really important. 

when you are first getting started with that, all you have to remember is take a parent, make it display flex, and automatically those col are going to adjust to the available screen size. If that's bigger, it's fine and if it gets smaller, they're gonna shrink and shrink and shrink 

*/

.row {
  /* display: flex => flex container */
  display: flex;

  /* defeault = row */
  flex-direction: row;
  gap: 100px;
}

.col {
  /* these are now flex items */
/*   background: lime;
  margin: 20px; */
  width: 100%;
}

.hero {
  padding: 100px 0;
  background-color:#23424a;
  color: #fff;
}

.hero p {
 margin-bottom: 3em;
}

.hero__text {
  width: 60%;
}


.btn {
display: inline-block;
text-decoration: none;
text-transform: uppercase;
color:#23424a;
font-weight:900;
background-color: #38cfd9;
padding: 0.75em 2em;
border-radius:100px;
}

.btn:hover,
.btn:focus {
  opacity: 0.75;
}

/* gap gambiarra seria como: .col + col{ 
  margin-left: 30px;
}

*/


